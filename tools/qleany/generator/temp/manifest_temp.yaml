CQRS:
  common_cmake_folder_path: src/core/contracts.cqrs
DTOs:
  common_cmake_folder_path: src/core/contracts.dto
application:
  common_cmake_folder_path: src/core/application
  features:
  - CRUD:
      create:
        enabled: true
      enabled: true
      entity_mappable_with: Car
      get:
        enabled: true
      get_all:
        enabled: true
      get_with_details:
        enabled: true
      insert_relation:
        enabled: true
      remove:
        enabled: true
      update:
        enabled: true
    DTO:
      dto_identical_to_entity:
        enabled: true
        entity_mappable_with: Car
    name: Car
  - CRUD:
      change_active_status:
        enabled: true
      create:
        enabled: true
      enabled: true
      entity_mappable_with: Brand
      get:
        enabled: true
      get_all:
        enabled: true
      get_with_details:
        enabled: false
      remove:
        enabled: true
      update:
        enabled: true
    DTO:
      dto_identical_to_entity:
        enabled: true
        entity_mappable_with: Brand
    name: Brand
  - CRUD:
      change_active_status:
        enabled: true
      create:
        enabled: true
      enabled: true
      entity_mappable_with: Passenger
      get:
        enabled: true
      get_all:
        enabled: true
      get_with_details:
        enabled: false
      remove:
        enabled: true
      update:
        enabled: true
    DTO:
      dto_identical_to_entity:
        enabled: true
        entity_mappable_with: Passenger
    name: Passenger
  - CRUD:
      create:
        enabled: true
      enabled: true
      entity_mappable_with: Client
      get:
        enabled: true
      get_all:
        enabled: true
      get_with_details:
        enabled: true
      insert_relation:
        enabled: true
      remove:
        enabled: true
      update:
        enabled: true
    DTO:
      dto_identical_to_entity:
        enabled: true
        entity_mappable_with: Client
    name: Client
  - CRUD:
      enabled: false
    DTO:
      dto_identical_to_entity:
        enabled: false
    commands:
    - dto:
        in:
          fields:
          - name: randomCarName
            type: QString
          type_prefix: WriteRandomThings
        out:
          enabled: false
      entities:
      - Car
      - Passenger
      - Brand
      - Client
      name: WriteRandomThings
      undo: false
      validator:
        enabled: true
    - dto:
        in:
          enabled: false
        out:
          enabled: false
      minimum_progress_time: 1000
      name: RunLongOperation
      undo: false
      validator:
        enabled: false
    - dto:
        in:
          enabled: false
        out:
          enabled: false
      entities:
      - Car
      - Passenger
      - Brand
      - Client
      name: CloseSystem
      undo: false
      validator:
        enabled: false
    name: Custom
    queries:
    - dto:
        in:
          enabled: false
        out:
          fields:
          - name: currentDateTime
            type: QDateTime
          type_prefix: GetCurrentTimeReply
      name: GetCurrentTime
      undo: false
      validator:
        enabled: false
contracts:
  export: SIMPLEEXAMPLE_CONTRACTS_EXPORT
  export_header_file: contracts_export.h
  folder_path: src/core/contracts
  inverted_app_domain: eu.qleany
controller:
  create_undo_redo_controller: true
  export: SIMPLEEXAMPLE_CONTROLLER_EXPORT
  export_header_file: controller_export.h
  folder_path: src/core/controller/
entities:
  export: SIMPLEEXAMPLE_DOMAIN_EXPORT
  export_header_file: domain_export.h
  folder_path: src/core/domain/
  list:
  - fields:
    - name: uuid
      type: QUuid
    - name: creationDate
      type: QDateTime
    - name: updateDate
      type: QDateTime
    name: Entity
    only_for_heritage: true
    parent: EntityBase
  - fields:
    - name: content
      type: QString
    - name: brand
      strong: true
      type: Brand
    - name: passengers
      ordered: true
      strong: true
      type: QList<Passenger>
    name: Car
    parent: Entity
  - fields:
    - name: name
      type: QString
    name: Brand
    parent: Entity
  - fields:
    - name: name
      type: QString
    name: Passenger
    parent: Entity
  - fields:
    - name: client
      ordered: false
      strong: false
      type: Passenger
    - name: clientFriends
      type: QList<Passenger>
    name: Client
    parent: Entity
global:
  application_cpp_domain_name: Simple
  application_name: SimpleExample
  organisation:
    domain: qleany.eu
    name: simpleexample
presenter:
  create_undo_and_redo_singles: true
  export: SIMPLEEXAMPLE_PRESENTER_EXPORT
  export_header_file: presenter_export.h
  folder_path: src/gui/presenter
  list_models:
  - displayed_field: name
    entity: Passenger
    in_relation_of: Car
    name: PassengerListModelFromCarPassengers
    relation_field_name: passengers
  - displayed_field: content
    entity: Car
    name: CarListModel
  singles:
  - entity: Car
    name: SingleCar
  - entity: Brand
    name: auto
  - entity: Passenger
    name: auto
  - entity: Client
    name: auto
qml:
  mock_imports_folder_path: src/gui/qml_application/mock_imports/
  real_imports_folder_path: src/gui/qml_application/real_imports/
repositories:
  base_folder_path: src/core/persistence/
  export: SIMPLEEXAMPLE_PERSISTENCE_EXPORT
  export_header_file: persistence_export.h
  interface_path: src/core/contracts/repository/
  list:
  - entity_name: Car
    lazy_loaders: true
  - entity_name: Brand
    lazy_loaders: true
  - entity_name: Passenger
    lazy_loaders: true
  - entity_name: Client
    lazy_loaders: true
  repository_folder_path: src/core/persistence/repository/
